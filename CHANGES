
Version 4.20.2
------------

    Found a serious bug with my new custom header objects, they
    were lacking the required C deallocation function, so
    when they were being destroyed, Python would die with a 
    signall 11 error.  Fortunately Exim could handle that 
    situation and report a temporary error back to the client.

    It was kind of a subtle problem in that you didn't see it
    happen with single messages, but if a SMTP client attempted
    to send more than one, it'd die on the second message as the
    old headers were being replaced in the exim dictionary
    by the new ones.

    Dropped the backwards-compatibility stuff that allowed those
    header objects to be accessessed as sequences.

    Added some protection so that if you managed to hang onto
    old header references after a message was done being processed,
    and the underlying Exim structures were no longer present, 
    trying to read their values didn't cause another signal 11 or
    Python MemoryError.  Instead a less lethal AttributeError is raised.


Version 4.20.1
------------

    Several settings that were previously fixed at compile-time
    may now be set at run-time though the Exim 'configure' file.

    Notably: expy_path_add allows you to add a directory to the 
    Python path, so you don't have to have your local_scan module
    in the site-packages directory necessarily.  


Version 4.20
------------

    Change the way header_lines are represented in exim.headers  
    Instead of being two-element tuples (text, type), they're now 
    a custom object with .text, and .type attributes.   

    The .type attribute is settable, so you can set it to '*' to mark 
    header lines that exim should consider as being deleted.  The .text
    attribute is read-only

    Access to the text and type attributes through sequence_methods is 
    still possible for backwards compatibility (h[0] instead of h.text), 
    but deprecated.  This'll probably be yanked in future versions, so
    update your scripts!

    
Version 4.14
------------

    Will now use the same version number as the Exim it's supposed to 
    correspond with.
    
    Added support for new local_scan features such as:
    
        debug_print method - accesses Exim's debug_printf() function

        Constants:
         
             LOG_PANIC
             LOCAL_SCAN_ACCEPT_FREEZE
             LOCAL_SCAN_ACCEPT_QUEUE
             LOCAL_SCAN_REJECT_NOLOGHDR
             LOCAL_SCAN_TEMPREJECT_NOLOGHDR
             MESSAGE_ID_LENGTH
             SPOOL_DATA_START_OFFSET
                     
        Variables:
        
             debug_selector
             host_checking
             message_id

    Calls to expand_string() that fail now return Exim's
    expand_string_message in the exception that's raised. 

    The patch_exim_makefile.py script actually works the way
    the README and README.FreeBSD files describe.             
             
             
Version 1.0
------------

    First version
